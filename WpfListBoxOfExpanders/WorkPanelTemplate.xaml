<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:WpfListBoxOfExpanders">
    <!--#region      ExpanderTemplate -->
    <!--   Expander Button's Template -->
    <ControlTemplate x:Key="ExpanderToggleButtonTemplate" TargetType="ToggleButton">
        <Border>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Rectangle Fill="Transparent"
                          Grid.ColumnSpan="2" />
                <Ellipse Grid.Column="0"
                        Stroke="DarkGray"
                        Width="20"
                        Height="20"
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center" />
                <Path x:Name="Arrow"
                     Grid.Column="0"
                     Data="M 1,1.5 L 4.5,5 8,1.5"
                     Stroke="#FF666666"
                     StrokeThickness="2"
                     HorizontalAlignment="Center"
                     VerticalAlignment="Center"
                     RenderTransformOrigin="0.5,0.5" />
            </Grid>
        </Border>
        <ControlTemplate.Triggers>
            <!--Change the Arrow direction when toggled-->
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Data" TargetName="Arrow" Value="M 1,4.5 L 4.5,1.5 8,4.5" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
 
    <!-- Expander Template-->
    <ControlTemplate x:Key="ExpanderTemplate" TargetType="{x:Type Expander}">
        <!--<Grid Width="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualWidth}">-->
        <Grid >
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Name="ContentRow" Height="0" />
            </Grid.RowDefinitions>
            <Border Name="Border" Grid.Row="0" BorderThickness="1">
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="32" />
                    </Grid.ColumnDefinitions>
                    <!-- Размещение кнопки в правом столбце. -->
                    <ToggleButton Grid.Column="1"
                             IsChecked="{Binding Path=IsExpanded, Mode=TwoWay, RelativeSource={RelativeSource TemplatedParent}}"
                             OverridesDefaultStyle="True"
                             Template="{StaticResource ExpanderToggleButtonTemplate}" />
                    <ContentPresenter Grid.Column="0"
                                 Margin="4"
                                 ContentSource="Header" />
                </Grid>
            </Border>
            <Border Name="Content" Grid.Row="1" >
                <ContentPresenter Margin="4" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsExpanded" Value="True">
                <Setter TargetName="ContentRow" Property="Height" Value="Auto" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>
 
    <!--Expander Header Template-->
    <DataTemplate x:Key="ExpanderHeaderTemplate">
      <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Header: "/>
            <TextBox Grid.Column="1"
                     Text="{Binding Path=Data.ExpanderHeaderData, UpdateSourceTrigger=PropertyChanged}"/>
      </Grid>
      <!--<Border Height="Auto">
      <StackPanel Orientation="Horizontal">
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Header:" />
                    <TextBox Text="{Binding Path=Data.ExpanderHeaderData, UpdateSourceTrigger=PropertyChanged}" Width="240" />
                </StackPanel>
            </StackPanel>
      </Border>-->
    </DataTemplate>
 
    <!--Expander Content Template-->
    <DataTemplate x:Key="ExpanderContentTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <TextBlock Text="Content: " />
            <TextBox Grid.Column="1"
                     Text="{Binding Path=Data.ExpanderContentData, UpdateSourceTrigger=PropertyChanged}"/>
        </Grid>
        <!--<Border Height="100">
            <WrapPanel>
                <StackPanel Orientation="Horizontal">
                    <TextBlock Text="Content:" />
                    <TextBox Text="{Binding Path=Data.ExpanderContentData, UpdateSourceTrigger=PropertyChanged}" Width="240" />
                </StackPanel>
            </WrapPanel>
        </Border>-->
    </DataTemplate>
    <!--#endregion   ExpanderTemplate -->
 
    <!--Шаблон расширяемого элемента панели задания-->
    <DataTemplate x:Key="ExpandableTaskPanelItemTemplate"
                  DataType="{x:Type local:ObservableData}">
        <!--<StackPanel>-->
        <Border BorderBrush="Black" BorderThickness="1,1,1,1">
            <Expander Template="{StaticResource ExpanderTemplate}"
                      IsExpanded="{Binding IsExpanded, UpdateSourceTrigger=PropertyChanged}"
                      OverridesDefaultStyle="True"
                      VerticalAlignment="Center"
                      HeaderTemplate="{DynamicResource ExpanderHeaderTemplate}"
                      ContentTemplate="{DynamicResource ExpanderContentTemplate}"
                      Header="{Binding}"
                      Content="{Binding}">
                <!--<Expander.Header>
                    <ContentControl Content="{Binding}" ContentTemplate="{StaticResource ExpanderHeaderTemplate}" />
                </Expander.Header>-->
                <!--<ContentControl Content="{Binding}" ContentTemplate="{StaticResource ExpanderContentTemplate}" />-->
            </Expander>
        </Border>
        <!--</StackPanel>-->
    </DataTemplate>
 
    <Style TargetType="ListBoxItem">
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="true">
                <Setter Property="IsSelected" Value="true" />
            </Trigger>
        </Style.Triggers>
    </Style>
 
    <!--Шаблон размещения элементов на рабочей панели.-->
    <DataTemplate x:Key="WorkPanelTemplate">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="24" />
                <RowDefinition />
            </Grid.RowDefinitions>
 
            <TextBlock Grid.Row="0" Text ="Work Panel" />
 
            <ListBox Grid.Row="1" ItemsSource="{Binding DataCollection}"
                     SelectedItem="{Binding SelectedItem, Mode=TwoWay}"
                     SelectionMode="Single"
                     ItemTemplate="{DynamicResource ExpandableTaskPanelItemTemplate}">
 
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"/>
                        <Setter Property="Width" Value="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Border}, Path=ActualWidth}" />
                        <Setter Property="local:SelectorHelper.IsKeyboardFocusWithinSelect" Value="True"/>
                        <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                        <Setter Property="Width" Value="{Binding ViewportWidth, RelativeSource={RelativeSource FindAncestor, AncestorType=ScrollViewer}}"/>
                    </Style>
                </ListBox.ItemContainerStyle>
 
                <!--<ListBox.ItemTemplate>
                    <DataTemplate>
                        <ContentControl Content="{Binding}" ContentTemplate ="{StaticResource ExpandableTaskPanelItemTemplate}" Width="Auto" HorizontalAlignment="Stretch" />
                    </DataTemplate>
                </ListBox.ItemTemplate>-->
 
            </ListBox>
        </Grid>
    </DataTemplate>
</ResourceDictionary>